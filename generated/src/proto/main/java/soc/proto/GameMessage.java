// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_message.proto

package soc.proto;

public final class GameMessage {
  private GameMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:State)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .GameState state = 1;</code>
     */
    int getStateValue();
    /**
     * <code>optional .GameState state = 1;</code>
     */
    soc.proto.Data.GameState getState();
  }
  /**
   * <pre>
   * The current state of the game, sent when it changes.
   *&lt;P&gt;
   * Messages which change the current turn or player, like {&#64;link Turn}
   * and {&#64;link StartGame}, include the new turn's state as a field because
   * the current player and game state are both changing.
   *&lt;P&gt;
   * For some states, such as {&#64;link Data.GameState#WAITING_FOR_ROB_CHOOSE_PLAYER},
   * another message (such as {&#64;link ChoosePlayerRequest}) will
   * follow to prompt the current player.  For others, such as
   * {&#64;link Data.GameState#WAITING_FOR_DISCOVERY} or
   * {&#64;link Data.GameState#WAITING_FOR_ROBBER_OR_PIRATE}, sending this
   * State message implies that the player must decide and respond.
   *&lt;P&gt;
   * For {&#64;link Data.GameState#WAITING_FOR_ROBBER_OR_PIRATE}, the player should
   * respond with {&#64;link ChoosePlayer}; see that message's javadoc.
   *&lt;P&gt;
   * Before v3.0.00 this message was {&#64;code GameState}.
   * </pre>
   *
   * Protobuf type {@code State}
   */
  public  static final class State extends
      com.google.protobuf.GeneratedMessageLite<
          State, State.Builder> implements
      // @@protoc_insertion_point(message_implements:State)
      StateOrBuilder {
    private State() {
    }
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>optional .GameState state = 1;</code>
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <code>optional .GameState state = 1;</code>
     */
    public soc.proto.Data.GameState getState() {
      soc.proto.Data.GameState result = soc.proto.Data.GameState.forNumber(state_);
      return result == null ? soc.proto.Data.GameState.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .GameState state = 1;</code>
     */
    private void setStateValue(int value) {
        state_ = value;
    }
    /**
     * <code>optional .GameState state = 1;</code>
     */
    private void setState(soc.proto.Data.GameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
    }
    /**
     * <code>optional .GameState state = 1;</code>
     */
    private void clearState() {
      
      state_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (state_ != soc.proto.Data.GameState.NEW.getNumber()) {
        output.writeEnum(1, state_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (state_ != soc.proto.Data.GameState.NEW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static soc.proto.GameMessage.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.GameMessage.State prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * The current state of the game, sent when it changes.
     *&lt;P&gt;
     * Messages which change the current turn or player, like {&#64;link Turn}
     * and {&#64;link StartGame}, include the new turn's state as a field because
     * the current player and game state are both changing.
     *&lt;P&gt;
     * For some states, such as {&#64;link Data.GameState#WAITING_FOR_ROB_CHOOSE_PLAYER},
     * another message (such as {&#64;link ChoosePlayerRequest}) will
     * follow to prompt the current player.  For others, such as
     * {&#64;link Data.GameState#WAITING_FOR_DISCOVERY} or
     * {&#64;link Data.GameState#WAITING_FOR_ROBBER_OR_PIRATE}, sending this
     * State message implies that the player must decide and respond.
     *&lt;P&gt;
     * For {&#64;link Data.GameState#WAITING_FOR_ROBBER_OR_PIRATE}, the player should
     * respond with {&#64;link ChoosePlayer}; see that message's javadoc.
     *&lt;P&gt;
     * Before v3.0.00 this message was {&#64;code GameState}.
     * </pre>
     *
     * Protobuf type {@code State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          soc.proto.GameMessage.State, Builder> implements
        // @@protoc_insertion_point(builder_implements:State)
        soc.proto.GameMessage.StateOrBuilder {
      // Construct using soc.proto.GameMessage.State.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .GameState state = 1;</code>
       */
      public int getStateValue() {
        return instance.getStateValue();
      }
      /**
       * <code>optional .GameState state = 1;</code>
       */
      public Builder setStateValue(int value) {
        copyOnWrite();
        instance.setStateValue(value);
        return this;
      }
      /**
       * <code>optional .GameState state = 1;</code>
       */
      public soc.proto.Data.GameState getState() {
        return instance.getState();
      }
      /**
       * <code>optional .GameState state = 1;</code>
       */
      public Builder setState(soc.proto.Data.GameState value) {
        copyOnWrite();
        instance.setState(value);
        return this;
      }
      /**
       * <code>optional .GameState state = 1;</code>
       */
      public Builder clearState() {
        copyOnWrite();
        instance.clearState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:State)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new soc.proto.GameMessage.State();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          soc.proto.GameMessage.State other = (soc.proto.GameMessage.State) arg1;
          state_ = visitor.visitInt(state_ != 0, state_,    other.state_ != 0, other.state_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  state_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (soc.proto.GameMessage.State.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:State)
    private static final soc.proto.GameMessage.State DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new State();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static soc.proto.GameMessage.State getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<State> PARSER;

    public static com.google.protobuf.Parser<State> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StartGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StartGame)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * new state; ignored from client
     * </pre>
     *
     * <code>optional .GameState state = 1;</code>
     */
    int getStateValue();
    /**
     * <pre>
     * new state; ignored from client
     * </pre>
     *
     * <code>optional .GameState state = 1;</code>
     */
    soc.proto.Data.GameState getState();
  }
  /**
   * <pre>
   * From client, this message means that a player wants to start the game;
   * from server, it means that a game has just started, leaving state {&#64;code NEW}.
   *&lt;P&gt;
   * If a client joins a game in progress it won't be sent a {&#64;code SOCStartGame} message,
   * only the game's current {&#64;code GameState} and other parts of the game's and
   * players' current status.
   * </pre>
   *
   * Protobuf type {@code StartGame}
   */
  public  static final class StartGame extends
      com.google.protobuf.GeneratedMessageLite<
          StartGame, StartGame.Builder> implements
      // @@protoc_insertion_point(message_implements:StartGame)
      StartGameOrBuilder {
    private StartGame() {
    }
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <pre>
     * new state; ignored from client
     * </pre>
     *
     * <code>optional .GameState state = 1;</code>
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * new state; ignored from client
     * </pre>
     *
     * <code>optional .GameState state = 1;</code>
     */
    public soc.proto.Data.GameState getState() {
      soc.proto.Data.GameState result = soc.proto.Data.GameState.forNumber(state_);
      return result == null ? soc.proto.Data.GameState.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * new state; ignored from client
     * </pre>
     *
     * <code>optional .GameState state = 1;</code>
     */
    private void setStateValue(int value) {
        state_ = value;
    }
    /**
     * <pre>
     * new state; ignored from client
     * </pre>
     *
     * <code>optional .GameState state = 1;</code>
     */
    private void setState(soc.proto.Data.GameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
    }
    /**
     * <pre>
     * new state; ignored from client
     * </pre>
     *
     * <code>optional .GameState state = 1;</code>
     */
    private void clearState() {
      
      state_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (state_ != soc.proto.Data.GameState.NEW.getNumber()) {
        output.writeEnum(1, state_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (state_ != soc.proto.Data.GameState.NEW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static soc.proto.GameMessage.StartGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.StartGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.StartGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.StartGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.StartGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.StartGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.StartGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.StartGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.StartGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.StartGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.GameMessage.StartGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * From client, this message means that a player wants to start the game;
     * from server, it means that a game has just started, leaving state {&#64;code NEW}.
     *&lt;P&gt;
     * If a client joins a game in progress it won't be sent a {&#64;code SOCStartGame} message,
     * only the game's current {&#64;code GameState} and other parts of the game's and
     * players' current status.
     * </pre>
     *
     * Protobuf type {@code StartGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          soc.proto.GameMessage.StartGame, Builder> implements
        // @@protoc_insertion_point(builder_implements:StartGame)
        soc.proto.GameMessage.StartGameOrBuilder {
      // Construct using soc.proto.GameMessage.StartGame.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * new state; ignored from client
       * </pre>
       *
       * <code>optional .GameState state = 1;</code>
       */
      public int getStateValue() {
        return instance.getStateValue();
      }
      /**
       * <pre>
       * new state; ignored from client
       * </pre>
       *
       * <code>optional .GameState state = 1;</code>
       */
      public Builder setStateValue(int value) {
        copyOnWrite();
        instance.setStateValue(value);
        return this;
      }
      /**
       * <pre>
       * new state; ignored from client
       * </pre>
       *
       * <code>optional .GameState state = 1;</code>
       */
      public soc.proto.Data.GameState getState() {
        return instance.getState();
      }
      /**
       * <pre>
       * new state; ignored from client
       * </pre>
       *
       * <code>optional .GameState state = 1;</code>
       */
      public Builder setState(soc.proto.Data.GameState value) {
        copyOnWrite();
        instance.setState(value);
        return this;
      }
      /**
       * <pre>
       * new state; ignored from client
       * </pre>
       *
       * <code>optional .GameState state = 1;</code>
       */
      public Builder clearState() {
        copyOnWrite();
        instance.clearState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StartGame)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new soc.proto.GameMessage.StartGame();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          soc.proto.GameMessage.StartGame other = (soc.proto.GameMessage.StartGame) arg1;
          state_ = visitor.visitInt(state_ != 0, state_,    other.state_ != 0, other.state_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  state_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (soc.proto.GameMessage.StartGame.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:StartGame)
    private static final soc.proto.GameMessage.StartGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StartGame();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static soc.proto.GameMessage.StartGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StartGame> PARSER;

    public static com.google.protobuf.Parser<StartGame> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TurnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Turn)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * new current player's seat number
     * </pre>
     *
     * <code>optional uint32 player_number = 1;</code>
     */
    int getPlayerNumber();

    /**
     * <pre>
     * new state, or empty/0 when joining game in progress
     * </pre>
     *
     * <code>optional .GameState state = 2;</code>
     */
    int getStateValue();
    /**
     * <pre>
     * new state, or empty/0 when joining game in progress
     * </pre>
     *
     * <code>optional .GameState state = 2;</code>
     */
    soc.proto.Data.GameState getState();
  }
  /**
   * <pre>
   * End of the current player's turn, start of a new turn.
   * Client should end current turn, clear dice, set current player number, reset votes, etc.
   * New player's client should check the state field to inform that player's options and actions.
   *&lt;P&gt;
   * Sent at game state {&#64;link Data.GameState#OVER} to confirm the winning player,
   * who will already be the current player.
   *&lt;P&gt;
   * Also can be sent to a client joining a game in progress, to set only the current player number.
   * In this case {&#64;code state} will be empty or 0. Before v3.0.00 this usage was a separate
   * {&#64;code SOCSetTurn} message type.
   * </pre>
   *
   * Protobuf type {@code Turn}
   */
  public  static final class Turn extends
      com.google.protobuf.GeneratedMessageLite<
          Turn, Turn.Builder> implements
      // @@protoc_insertion_point(message_implements:Turn)
      TurnOrBuilder {
    private Turn() {
    }
    public static final int PLAYER_NUMBER_FIELD_NUMBER = 1;
    private int playerNumber_;
    /**
     * <pre>
     * new current player's seat number
     * </pre>
     *
     * <code>optional uint32 player_number = 1;</code>
     */
    public int getPlayerNumber() {
      return playerNumber_;
    }
    /**
     * <pre>
     * new current player's seat number
     * </pre>
     *
     * <code>optional uint32 player_number = 1;</code>
     */
    private void setPlayerNumber(int value) {
      
      playerNumber_ = value;
    }
    /**
     * <pre>
     * new current player's seat number
     * </pre>
     *
     * <code>optional uint32 player_number = 1;</code>
     */
    private void clearPlayerNumber() {
      
      playerNumber_ = 0;
    }

    public static final int STATE_FIELD_NUMBER = 2;
    private int state_;
    /**
     * <pre>
     * new state, or empty/0 when joining game in progress
     * </pre>
     *
     * <code>optional .GameState state = 2;</code>
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * new state, or empty/0 when joining game in progress
     * </pre>
     *
     * <code>optional .GameState state = 2;</code>
     */
    public soc.proto.Data.GameState getState() {
      soc.proto.Data.GameState result = soc.proto.Data.GameState.forNumber(state_);
      return result == null ? soc.proto.Data.GameState.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * new state, or empty/0 when joining game in progress
     * </pre>
     *
     * <code>optional .GameState state = 2;</code>
     */
    private void setStateValue(int value) {
        state_ = value;
    }
    /**
     * <pre>
     * new state, or empty/0 when joining game in progress
     * </pre>
     *
     * <code>optional .GameState state = 2;</code>
     */
    private void setState(soc.proto.Data.GameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
    }
    /**
     * <pre>
     * new state, or empty/0 when joining game in progress
     * </pre>
     *
     * <code>optional .GameState state = 2;</code>
     */
    private void clearState() {
      
      state_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (playerNumber_ != 0) {
        output.writeUInt32(1, playerNumber_);
      }
      if (state_ != soc.proto.Data.GameState.NEW.getNumber()) {
        output.writeEnum(2, state_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (playerNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerNumber_);
      }
      if (state_ != soc.proto.Data.GameState.NEW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, state_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static soc.proto.GameMessage.Turn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.Turn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.Turn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.Turn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.Turn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.Turn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.Turn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.Turn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.Turn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.Turn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.GameMessage.Turn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * End of the current player's turn, start of a new turn.
     * Client should end current turn, clear dice, set current player number, reset votes, etc.
     * New player's client should check the state field to inform that player's options and actions.
     *&lt;P&gt;
     * Sent at game state {&#64;link Data.GameState#OVER} to confirm the winning player,
     * who will already be the current player.
     *&lt;P&gt;
     * Also can be sent to a client joining a game in progress, to set only the current player number.
     * In this case {&#64;code state} will be empty or 0. Before v3.0.00 this usage was a separate
     * {&#64;code SOCSetTurn} message type.
     * </pre>
     *
     * Protobuf type {@code Turn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          soc.proto.GameMessage.Turn, Builder> implements
        // @@protoc_insertion_point(builder_implements:Turn)
        soc.proto.GameMessage.TurnOrBuilder {
      // Construct using soc.proto.GameMessage.Turn.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * new current player's seat number
       * </pre>
       *
       * <code>optional uint32 player_number = 1;</code>
       */
      public int getPlayerNumber() {
        return instance.getPlayerNumber();
      }
      /**
       * <pre>
       * new current player's seat number
       * </pre>
       *
       * <code>optional uint32 player_number = 1;</code>
       */
      public Builder setPlayerNumber(int value) {
        copyOnWrite();
        instance.setPlayerNumber(value);
        return this;
      }
      /**
       * <pre>
       * new current player's seat number
       * </pre>
       *
       * <code>optional uint32 player_number = 1;</code>
       */
      public Builder clearPlayerNumber() {
        copyOnWrite();
        instance.clearPlayerNumber();
        return this;
      }

      /**
       * <pre>
       * new state, or empty/0 when joining game in progress
       * </pre>
       *
       * <code>optional .GameState state = 2;</code>
       */
      public int getStateValue() {
        return instance.getStateValue();
      }
      /**
       * <pre>
       * new state, or empty/0 when joining game in progress
       * </pre>
       *
       * <code>optional .GameState state = 2;</code>
       */
      public Builder setStateValue(int value) {
        copyOnWrite();
        instance.setStateValue(value);
        return this;
      }
      /**
       * <pre>
       * new state, or empty/0 when joining game in progress
       * </pre>
       *
       * <code>optional .GameState state = 2;</code>
       */
      public soc.proto.Data.GameState getState() {
        return instance.getState();
      }
      /**
       * <pre>
       * new state, or empty/0 when joining game in progress
       * </pre>
       *
       * <code>optional .GameState state = 2;</code>
       */
      public Builder setState(soc.proto.Data.GameState value) {
        copyOnWrite();
        instance.setState(value);
        return this;
      }
      /**
       * <pre>
       * new state, or empty/0 when joining game in progress
       * </pre>
       *
       * <code>optional .GameState state = 2;</code>
       */
      public Builder clearState() {
        copyOnWrite();
        instance.clearState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Turn)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new soc.proto.GameMessage.Turn();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          soc.proto.GameMessage.Turn other = (soc.proto.GameMessage.Turn) arg1;
          playerNumber_ = visitor.visitInt(playerNumber_ != 0, playerNumber_,
              other.playerNumber_ != 0, other.playerNumber_);
          state_ = visitor.visitInt(state_ != 0, state_,    other.state_ != 0, other.state_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  playerNumber_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  state_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (soc.proto.GameMessage.Turn.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Turn)
    private static final soc.proto.GameMessage.Turn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Turn();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static soc.proto.GameMessage.Turn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Turn> PARSER;

    public static com.google.protobuf.Parser<Turn> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EndTurnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EndTurn)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Player wants to end their turn. 
   * </pre>
   *
   * Protobuf type {@code EndTurn}
   */
  public  static final class EndTurn extends
      com.google.protobuf.GeneratedMessageLite<
          EndTurn, EndTurn.Builder> implements
      // @@protoc_insertion_point(message_implements:EndTurn)
      EndTurnOrBuilder {
    private EndTurn() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    public static soc.proto.GameMessage.EndTurn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.EndTurn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.EndTurn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.EndTurn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.EndTurn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.EndTurn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.EndTurn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.EndTurn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.EndTurn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.EndTurn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.GameMessage.EndTurn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Player wants to end their turn. 
     * </pre>
     *
     * Protobuf type {@code EndTurn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          soc.proto.GameMessage.EndTurn, Builder> implements
        // @@protoc_insertion_point(builder_implements:EndTurn)
        soc.proto.GameMessage.EndTurnOrBuilder {
      // Construct using soc.proto.GameMessage.EndTurn.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:EndTurn)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new soc.proto.GameMessage.EndTurn();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          soc.proto.GameMessage.EndTurn other = (soc.proto.GameMessage.EndTurn) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (soc.proto.GameMessage.EndTurn.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:EndTurn)
    private static final soc.proto.GameMessage.EndTurn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EndTurn();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static soc.proto.GameMessage.EndTurn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EndTurn> PARSER;

    public static com.google.protobuf.Parser<EndTurn> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameMessageFromServerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameMessageFromServer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    java.lang.String getGaName();
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getGaNameBytes();

    /**
     * <pre>
     * state
     * </pre>
     *
     * <code>optional .State game_state = 2;</code>
     */
    soc.proto.GameMessage.State getGameState();

    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    soc.proto.GameMessage.StartGame getStartGame();

    /**
     * <code>optional .Turn turn = 101;</code>
     */
    soc.proto.GameMessage.Turn getTurn();

    public soc.proto.GameMessage.GameMessageFromServer.MsgCase getMsgCase();
  }
  /**
   * Protobuf type {@code GameMessageFromServer}
   */
  public  static final class GameMessageFromServer extends
      com.google.protobuf.GeneratedMessageLite<
          GameMessageFromServer, GameMessageFromServer.Builder> implements
      // @@protoc_insertion_point(message_implements:GameMessageFromServer)
      GameMessageFromServerOrBuilder {
    private GameMessageFromServer() {
      gaName_ = "";
    }
    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public enum MsgCase
        implements com.google.protobuf.Internal.EnumLite {
      GAME_STATE(2),
      START_GAME(100),
      TURN(101),
      MSG_NOT_SET(0);
      private final int value;
      private MsgCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MsgCase valueOf(int value) {
        return forNumber(value);
      }

      public static MsgCase forNumber(int value) {
        switch (value) {
          case 2: return GAME_STATE;
          case 100: return START_GAME;
          case 101: return TURN;
          case 0: return MSG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MsgCase
    getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    private void clearMsg() {
      msgCase_ = 0;
      msg_ = null;
    }

    public static final int GA_NAME_FIELD_NUMBER = 1;
    private java.lang.String gaName_;
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    public java.lang.String getGaName() {
      return gaName_;
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGaNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gaName_);
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    private void setGaName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      gaName_ = value;
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    private void clearGaName() {
      
      gaName_ = getDefaultInstance().getGaName();
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    private void setGaNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      gaName_ = value.toStringUtf8();
    }

    public static final int GAME_STATE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * state
     * </pre>
     *
     * <code>optional .State game_state = 2;</code>
     */
    public soc.proto.GameMessage.State getGameState() {
      if (msgCase_ == 2) {
         return (soc.proto.GameMessage.State) msg_;
      }
      return soc.proto.GameMessage.State.getDefaultInstance();
    }
    /**
     * <pre>
     * state
     * </pre>
     *
     * <code>optional .State game_state = 2;</code>
     */
    private void setGameState(soc.proto.GameMessage.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      msg_ = value;
      msgCase_ = 2;
    }
    /**
     * <pre>
     * state
     * </pre>
     *
     * <code>optional .State game_state = 2;</code>
     */
    private void setGameState(
        soc.proto.GameMessage.State.Builder builderForValue) {
      msg_ = builderForValue.build();
      msgCase_ = 2;
    }
    /**
     * <pre>
     * state
     * </pre>
     *
     * <code>optional .State game_state = 2;</code>
     */
    private void mergeGameState(soc.proto.GameMessage.State value) {
      if (msgCase_ == 2 &&
          msg_ != soc.proto.GameMessage.State.getDefaultInstance()) {
        msg_ = soc.proto.GameMessage.State.newBuilder((soc.proto.GameMessage.State) msg_)
            .mergeFrom(value).buildPartial();
      } else {
        msg_ = value;
      }
      msgCase_ = 2;
    }
    /**
     * <pre>
     * state
     * </pre>
     *
     * <code>optional .State game_state = 2;</code>
     */
    private void clearGameState() {
      if (msgCase_ == 2) {
        msgCase_ = 0;
        msg_ = null;
      }
    }

    public static final int START_GAME_FIELD_NUMBER = 100;
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    public soc.proto.GameMessage.StartGame getStartGame() {
      if (msgCase_ == 100) {
         return (soc.proto.GameMessage.StartGame) msg_;
      }
      return soc.proto.GameMessage.StartGame.getDefaultInstance();
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void setStartGame(soc.proto.GameMessage.StartGame value) {
      if (value == null) {
        throw new NullPointerException();
      }
      msg_ = value;
      msgCase_ = 100;
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void setStartGame(
        soc.proto.GameMessage.StartGame.Builder builderForValue) {
      msg_ = builderForValue.build();
      msgCase_ = 100;
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void mergeStartGame(soc.proto.GameMessage.StartGame value) {
      if (msgCase_ == 100 &&
          msg_ != soc.proto.GameMessage.StartGame.getDefaultInstance()) {
        msg_ = soc.proto.GameMessage.StartGame.newBuilder((soc.proto.GameMessage.StartGame) msg_)
            .mergeFrom(value).buildPartial();
      } else {
        msg_ = value;
      }
      msgCase_ = 100;
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void clearStartGame() {
      if (msgCase_ == 100) {
        msgCase_ = 0;
        msg_ = null;
      }
    }

    public static final int TURN_FIELD_NUMBER = 101;
    /**
     * <code>optional .Turn turn = 101;</code>
     */
    public soc.proto.GameMessage.Turn getTurn() {
      if (msgCase_ == 101) {
         return (soc.proto.GameMessage.Turn) msg_;
      }
      return soc.proto.GameMessage.Turn.getDefaultInstance();
    }
    /**
     * <code>optional .Turn turn = 101;</code>
     */
    private void setTurn(soc.proto.GameMessage.Turn value) {
      if (value == null) {
        throw new NullPointerException();
      }
      msg_ = value;
      msgCase_ = 101;
    }
    /**
     * <code>optional .Turn turn = 101;</code>
     */
    private void setTurn(
        soc.proto.GameMessage.Turn.Builder builderForValue) {
      msg_ = builderForValue.build();
      msgCase_ = 101;
    }
    /**
     * <code>optional .Turn turn = 101;</code>
     */
    private void mergeTurn(soc.proto.GameMessage.Turn value) {
      if (msgCase_ == 101 &&
          msg_ != soc.proto.GameMessage.Turn.getDefaultInstance()) {
        msg_ = soc.proto.GameMessage.Turn.newBuilder((soc.proto.GameMessage.Turn) msg_)
            .mergeFrom(value).buildPartial();
      } else {
        msg_ = value;
      }
      msgCase_ = 101;
    }
    /**
     * <code>optional .Turn turn = 101;</code>
     */
    private void clearTurn() {
      if (msgCase_ == 101) {
        msgCase_ = 0;
        msg_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!gaName_.isEmpty()) {
        output.writeString(1, getGaName());
      }
      if (msgCase_ == 2) {
        output.writeMessage(2, (soc.proto.GameMessage.State) msg_);
      }
      if (msgCase_ == 100) {
        output.writeMessage(100, (soc.proto.GameMessage.StartGame) msg_);
      }
      if (msgCase_ == 101) {
        output.writeMessage(101, (soc.proto.GameMessage.Turn) msg_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!gaName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGaName());
      }
      if (msgCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (soc.proto.GameMessage.State) msg_);
      }
      if (msgCase_ == 100) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, (soc.proto.GameMessage.StartGame) msg_);
      }
      if (msgCase_ == 101) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, (soc.proto.GameMessage.Turn) msg_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.GameMessageFromServer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.GameMessage.GameMessageFromServer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameMessageFromServer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          soc.proto.GameMessage.GameMessageFromServer, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameMessageFromServer)
        soc.proto.GameMessage.GameMessageFromServerOrBuilder {
      // Construct using soc.proto.GameMessage.GameMessageFromServer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public MsgCase
          getMsgCase() {
        return instance.getMsgCase();
      }

      public Builder clearMsg() {
        copyOnWrite();
        instance.clearMsg();
        return this;
      }


      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public java.lang.String getGaName() {
        return instance.getGaName();
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGaNameBytes() {
        return instance.getGaNameBytes();
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public Builder setGaName(
          java.lang.String value) {
        copyOnWrite();
        instance.setGaName(value);
        return this;
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public Builder clearGaName() {
        copyOnWrite();
        instance.clearGaName();
        return this;
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public Builder setGaNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGaNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * state
       * </pre>
       *
       * <code>optional .State game_state = 2;</code>
       */
      public soc.proto.GameMessage.State getGameState() {
        return instance.getGameState();
      }
      /**
       * <pre>
       * state
       * </pre>
       *
       * <code>optional .State game_state = 2;</code>
       */
      public Builder setGameState(soc.proto.GameMessage.State value) {
        copyOnWrite();
        instance.setGameState(value);
        return this;
      }
      /**
       * <pre>
       * state
       * </pre>
       *
       * <code>optional .State game_state = 2;</code>
       */
      public Builder setGameState(
          soc.proto.GameMessage.State.Builder builderForValue) {
        copyOnWrite();
        instance.setGameState(builderForValue);
        return this;
      }
      /**
       * <pre>
       * state
       * </pre>
       *
       * <code>optional .State game_state = 2;</code>
       */
      public Builder mergeGameState(soc.proto.GameMessage.State value) {
        copyOnWrite();
        instance.mergeGameState(value);
        return this;
      }
      /**
       * <pre>
       * state
       * </pre>
       *
       * <code>optional .State game_state = 2;</code>
       */
      public Builder clearGameState() {
        copyOnWrite();
        instance.clearGameState();
        return this;
      }

      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public soc.proto.GameMessage.StartGame getStartGame() {
        return instance.getStartGame();
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder setStartGame(soc.proto.GameMessage.StartGame value) {
        copyOnWrite();
        instance.setStartGame(value);
        return this;
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder setStartGame(
          soc.proto.GameMessage.StartGame.Builder builderForValue) {
        copyOnWrite();
        instance.setStartGame(builderForValue);
        return this;
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder mergeStartGame(soc.proto.GameMessage.StartGame value) {
        copyOnWrite();
        instance.mergeStartGame(value);
        return this;
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder clearStartGame() {
        copyOnWrite();
        instance.clearStartGame();
        return this;
      }

      /**
       * <code>optional .Turn turn = 101;</code>
       */
      public soc.proto.GameMessage.Turn getTurn() {
        return instance.getTurn();
      }
      /**
       * <code>optional .Turn turn = 101;</code>
       */
      public Builder setTurn(soc.proto.GameMessage.Turn value) {
        copyOnWrite();
        instance.setTurn(value);
        return this;
      }
      /**
       * <code>optional .Turn turn = 101;</code>
       */
      public Builder setTurn(
          soc.proto.GameMessage.Turn.Builder builderForValue) {
        copyOnWrite();
        instance.setTurn(builderForValue);
        return this;
      }
      /**
       * <code>optional .Turn turn = 101;</code>
       */
      public Builder mergeTurn(soc.proto.GameMessage.Turn value) {
        copyOnWrite();
        instance.mergeTurn(value);
        return this;
      }
      /**
       * <code>optional .Turn turn = 101;</code>
       */
      public Builder clearTurn() {
        copyOnWrite();
        instance.clearTurn();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameMessageFromServer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new soc.proto.GameMessage.GameMessageFromServer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          soc.proto.GameMessage.GameMessageFromServer other = (soc.proto.GameMessage.GameMessageFromServer) arg1;
          gaName_ = visitor.visitString(!gaName_.isEmpty(), gaName_,
              !other.gaName_.isEmpty(), other.gaName_);
          switch (other.getMsgCase()) {
            case GAME_STATE: {
              msg_ = visitor.visitOneofMessage(
                  msgCase_ == 2,
                  msg_,
                  other.msg_);
              break;
            }
            case START_GAME: {
              msg_ = visitor.visitOneofMessage(
                  msgCase_ == 100,
                  msg_,
                  other.msg_);
              break;
            }
            case TURN: {
              msg_ = visitor.visitOneofMessage(
                  msgCase_ == 101,
                  msg_,
                  other.msg_);
              break;
            }
            case MSG_NOT_SET: {
              visitor.visitOneofNotSet(msgCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.msgCase_ != 0) {
              msgCase_ = other.msgCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  gaName_ = s;
                  break;
                }
                case 18: {
                  soc.proto.GameMessage.State.Builder subBuilder = null;
                  if (msgCase_ == 2) {
                    subBuilder = ((soc.proto.GameMessage.State) msg_).toBuilder();
                  }
                  msg_ =
                       input.readMessage(soc.proto.GameMessage.State.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((soc.proto.GameMessage.State) msg_);
                    msg_ = subBuilder.buildPartial();
                  }
                  msgCase_ = 2;
                  break;
                }
                case 802: {
                  soc.proto.GameMessage.StartGame.Builder subBuilder = null;
                  if (msgCase_ == 100) {
                    subBuilder = ((soc.proto.GameMessage.StartGame) msg_).toBuilder();
                  }
                  msg_ =
                       input.readMessage(soc.proto.GameMessage.StartGame.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((soc.proto.GameMessage.StartGame) msg_);
                    msg_ = subBuilder.buildPartial();
                  }
                  msgCase_ = 100;
                  break;
                }
                case 810: {
                  soc.proto.GameMessage.Turn.Builder subBuilder = null;
                  if (msgCase_ == 101) {
                    subBuilder = ((soc.proto.GameMessage.Turn) msg_).toBuilder();
                  }
                  msg_ =
                       input.readMessage(soc.proto.GameMessage.Turn.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((soc.proto.GameMessage.Turn) msg_);
                    msg_ = subBuilder.buildPartial();
                  }
                  msgCase_ = 101;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (soc.proto.GameMessage.GameMessageFromServer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameMessageFromServer)
    private static final soc.proto.GameMessage.GameMessageFromServer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameMessageFromServer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static soc.proto.GameMessage.GameMessageFromServer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameMessageFromServer> PARSER;

    public static com.google.protobuf.Parser<GameMessageFromServer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameMessageFromClientOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameMessageFromClient)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    java.lang.String getGaName();
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getGaNameBytes();

    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    soc.proto.GameMessage.StartGame getStartGame();

    /**
     * <code>optional .EndTurn end_turn = 101;</code>
     */
    soc.proto.GameMessage.EndTurn getEndTurn();

    public soc.proto.GameMessage.GameMessageFromClient.MsgCase getMsgCase();
  }
  /**
   * Protobuf type {@code GameMessageFromClient}
   */
  public  static final class GameMessageFromClient extends
      com.google.protobuf.GeneratedMessageLite<
          GameMessageFromClient, GameMessageFromClient.Builder> implements
      // @@protoc_insertion_point(message_implements:GameMessageFromClient)
      GameMessageFromClientOrBuilder {
    private GameMessageFromClient() {
      gaName_ = "";
    }
    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public enum MsgCase
        implements com.google.protobuf.Internal.EnumLite {
      START_GAME(100),
      END_TURN(101),
      MSG_NOT_SET(0);
      private final int value;
      private MsgCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MsgCase valueOf(int value) {
        return forNumber(value);
      }

      public static MsgCase forNumber(int value) {
        switch (value) {
          case 100: return START_GAME;
          case 101: return END_TURN;
          case 0: return MSG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MsgCase
    getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    private void clearMsg() {
      msgCase_ = 0;
      msg_ = null;
    }

    public static final int GA_NAME_FIELD_NUMBER = 1;
    private java.lang.String gaName_;
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    public java.lang.String getGaName() {
      return gaName_;
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGaNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gaName_);
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    private void setGaName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      gaName_ = value;
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    private void clearGaName() {
      
      gaName_ = getDefaultInstance().getGaName();
    }
    /**
     * <pre>
     * Name of game
     * </pre>
     *
     * <code>optional string ga_name = 1;</code>
     */
    private void setGaNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      gaName_ = value.toStringUtf8();
    }

    public static final int START_GAME_FIELD_NUMBER = 100;
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    public soc.proto.GameMessage.StartGame getStartGame() {
      if (msgCase_ == 100) {
         return (soc.proto.GameMessage.StartGame) msg_;
      }
      return soc.proto.GameMessage.StartGame.getDefaultInstance();
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void setStartGame(soc.proto.GameMessage.StartGame value) {
      if (value == null) {
        throw new NullPointerException();
      }
      msg_ = value;
      msgCase_ = 100;
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void setStartGame(
        soc.proto.GameMessage.StartGame.Builder builderForValue) {
      msg_ = builderForValue.build();
      msgCase_ = 100;
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void mergeStartGame(soc.proto.GameMessage.StartGame value) {
      if (msgCase_ == 100 &&
          msg_ != soc.proto.GameMessage.StartGame.getDefaultInstance()) {
        msg_ = soc.proto.GameMessage.StartGame.newBuilder((soc.proto.GameMessage.StartGame) msg_)
            .mergeFrom(value).buildPartial();
      } else {
        msg_ = value;
      }
      msgCase_ = 100;
    }
    /**
     * <pre>
     * turn
     * </pre>
     *
     * <code>optional .StartGame start_game = 100;</code>
     */
    private void clearStartGame() {
      if (msgCase_ == 100) {
        msgCase_ = 0;
        msg_ = null;
      }
    }

    public static final int END_TURN_FIELD_NUMBER = 101;
    /**
     * <code>optional .EndTurn end_turn = 101;</code>
     */
    public soc.proto.GameMessage.EndTurn getEndTurn() {
      if (msgCase_ == 101) {
         return (soc.proto.GameMessage.EndTurn) msg_;
      }
      return soc.proto.GameMessage.EndTurn.getDefaultInstance();
    }
    /**
     * <code>optional .EndTurn end_turn = 101;</code>
     */
    private void setEndTurn(soc.proto.GameMessage.EndTurn value) {
      if (value == null) {
        throw new NullPointerException();
      }
      msg_ = value;
      msgCase_ = 101;
    }
    /**
     * <code>optional .EndTurn end_turn = 101;</code>
     */
    private void setEndTurn(
        soc.proto.GameMessage.EndTurn.Builder builderForValue) {
      msg_ = builderForValue.build();
      msgCase_ = 101;
    }
    /**
     * <code>optional .EndTurn end_turn = 101;</code>
     */
    private void mergeEndTurn(soc.proto.GameMessage.EndTurn value) {
      if (msgCase_ == 101 &&
          msg_ != soc.proto.GameMessage.EndTurn.getDefaultInstance()) {
        msg_ = soc.proto.GameMessage.EndTurn.newBuilder((soc.proto.GameMessage.EndTurn) msg_)
            .mergeFrom(value).buildPartial();
      } else {
        msg_ = value;
      }
      msgCase_ = 101;
    }
    /**
     * <code>optional .EndTurn end_turn = 101;</code>
     */
    private void clearEndTurn() {
      if (msgCase_ == 101) {
        msgCase_ = 0;
        msg_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!gaName_.isEmpty()) {
        output.writeString(1, getGaName());
      }
      if (msgCase_ == 100) {
        output.writeMessage(100, (soc.proto.GameMessage.StartGame) msg_);
      }
      if (msgCase_ == 101) {
        output.writeMessage(101, (soc.proto.GameMessage.EndTurn) msg_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!gaName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGaName());
      }
      if (msgCase_ == 100) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, (soc.proto.GameMessage.StartGame) msg_);
      }
      if (msgCase_ == 101) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, (soc.proto.GameMessage.EndTurn) msg_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static soc.proto.GameMessage.GameMessageFromClient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.GameMessage.GameMessageFromClient prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameMessageFromClient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          soc.proto.GameMessage.GameMessageFromClient, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameMessageFromClient)
        soc.proto.GameMessage.GameMessageFromClientOrBuilder {
      // Construct using soc.proto.GameMessage.GameMessageFromClient.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public MsgCase
          getMsgCase() {
        return instance.getMsgCase();
      }

      public Builder clearMsg() {
        copyOnWrite();
        instance.clearMsg();
        return this;
      }


      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public java.lang.String getGaName() {
        return instance.getGaName();
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGaNameBytes() {
        return instance.getGaNameBytes();
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public Builder setGaName(
          java.lang.String value) {
        copyOnWrite();
        instance.setGaName(value);
        return this;
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public Builder clearGaName() {
        copyOnWrite();
        instance.clearGaName();
        return this;
      }
      /**
       * <pre>
       * Name of game
       * </pre>
       *
       * <code>optional string ga_name = 1;</code>
       */
      public Builder setGaNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGaNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public soc.proto.GameMessage.StartGame getStartGame() {
        return instance.getStartGame();
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder setStartGame(soc.proto.GameMessage.StartGame value) {
        copyOnWrite();
        instance.setStartGame(value);
        return this;
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder setStartGame(
          soc.proto.GameMessage.StartGame.Builder builderForValue) {
        copyOnWrite();
        instance.setStartGame(builderForValue);
        return this;
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder mergeStartGame(soc.proto.GameMessage.StartGame value) {
        copyOnWrite();
        instance.mergeStartGame(value);
        return this;
      }
      /**
       * <pre>
       * turn
       * </pre>
       *
       * <code>optional .StartGame start_game = 100;</code>
       */
      public Builder clearStartGame() {
        copyOnWrite();
        instance.clearStartGame();
        return this;
      }

      /**
       * <code>optional .EndTurn end_turn = 101;</code>
       */
      public soc.proto.GameMessage.EndTurn getEndTurn() {
        return instance.getEndTurn();
      }
      /**
       * <code>optional .EndTurn end_turn = 101;</code>
       */
      public Builder setEndTurn(soc.proto.GameMessage.EndTurn value) {
        copyOnWrite();
        instance.setEndTurn(value);
        return this;
      }
      /**
       * <code>optional .EndTurn end_turn = 101;</code>
       */
      public Builder setEndTurn(
          soc.proto.GameMessage.EndTurn.Builder builderForValue) {
        copyOnWrite();
        instance.setEndTurn(builderForValue);
        return this;
      }
      /**
       * <code>optional .EndTurn end_turn = 101;</code>
       */
      public Builder mergeEndTurn(soc.proto.GameMessage.EndTurn value) {
        copyOnWrite();
        instance.mergeEndTurn(value);
        return this;
      }
      /**
       * <code>optional .EndTurn end_turn = 101;</code>
       */
      public Builder clearEndTurn() {
        copyOnWrite();
        instance.clearEndTurn();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameMessageFromClient)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new soc.proto.GameMessage.GameMessageFromClient();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          soc.proto.GameMessage.GameMessageFromClient other = (soc.proto.GameMessage.GameMessageFromClient) arg1;
          gaName_ = visitor.visitString(!gaName_.isEmpty(), gaName_,
              !other.gaName_.isEmpty(), other.gaName_);
          switch (other.getMsgCase()) {
            case START_GAME: {
              msg_ = visitor.visitOneofMessage(
                  msgCase_ == 100,
                  msg_,
                  other.msg_);
              break;
            }
            case END_TURN: {
              msg_ = visitor.visitOneofMessage(
                  msgCase_ == 101,
                  msg_,
                  other.msg_);
              break;
            }
            case MSG_NOT_SET: {
              visitor.visitOneofNotSet(msgCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.msgCase_ != 0) {
              msgCase_ = other.msgCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  gaName_ = s;
                  break;
                }
                case 802: {
                  soc.proto.GameMessage.StartGame.Builder subBuilder = null;
                  if (msgCase_ == 100) {
                    subBuilder = ((soc.proto.GameMessage.StartGame) msg_).toBuilder();
                  }
                  msg_ =
                       input.readMessage(soc.proto.GameMessage.StartGame.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((soc.proto.GameMessage.StartGame) msg_);
                    msg_ = subBuilder.buildPartial();
                  }
                  msgCase_ = 100;
                  break;
                }
                case 810: {
                  soc.proto.GameMessage.EndTurn.Builder subBuilder = null;
                  if (msgCase_ == 101) {
                    subBuilder = ((soc.proto.GameMessage.EndTurn) msg_).toBuilder();
                  }
                  msg_ =
                       input.readMessage(soc.proto.GameMessage.EndTurn.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((soc.proto.GameMessage.EndTurn) msg_);
                    msg_ = subBuilder.buildPartial();
                  }
                  msgCase_ = 101;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (soc.proto.GameMessage.GameMessageFromClient.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameMessageFromClient)
    private static final soc.proto.GameMessage.GameMessageFromClient DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameMessageFromClient();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static soc.proto.GameMessage.GameMessageFromClient getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameMessageFromClient> PARSER;

    public static com.google.protobuf.Parser<GameMessageFromClient> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
