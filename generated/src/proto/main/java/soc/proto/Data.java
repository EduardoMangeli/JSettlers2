// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

package soc.proto;

public final class Data {
  private Data() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Structs here are suffixed "Data" since we eventually want them used in the java code. Many struct names will then get
   *the same name as its OO counterparts. As in Java OO is central, I choose to suffix the data.
   * </pre>
   *
   * Protobuf enum {@code ResourceType}
   */
  public enum ResourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * For now, we're still tied to the integer values. Therefore I want the values to be the same as we currently use
     * them until the integer dependencies are refactored out.
     * </pre>
     *
     * <code>_NOT_YET_USED = 0;</code>
     */
    _NOT_YET_USED(0),
    /**
     * <code>CLAY = 1;</code>
     */
    CLAY(1),
    /**
     * <code>ORE = 2;</code>
     */
    ORE(2),
    /**
     * <code>SHEEP = 3;</code>
     */
    SHEEP(3),
    /**
     * <code>WHEAT = 4;</code>
     */
    WHEAT(4),
    /**
     * <code>WOOD = 5;</code>
     */
    WOOD(5),
    /**
     * <pre>
     * TODO: shares a slot with GOLD in some instances
     * </pre>
     *
     * <code>UNKNOWN = 6;</code>
     */
    UNKNOWN(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * For now, we're still tied to the integer values. Therefore I want the values to be the same as we currently use
     * them until the integer dependencies are refactored out.
     * </pre>
     *
     * <code>_NOT_YET_USED = 0;</code>
     */
    public static final int _NOT_YET_USED_VALUE = 0;
    /**
     * <code>CLAY = 1;</code>
     */
    public static final int CLAY_VALUE = 1;
    /**
     * <code>ORE = 2;</code>
     */
    public static final int ORE_VALUE = 2;
    /**
     * <code>SHEEP = 3;</code>
     */
    public static final int SHEEP_VALUE = 3;
    /**
     * <code>WHEAT = 4;</code>
     */
    public static final int WHEAT_VALUE = 4;
    /**
     * <code>WOOD = 5;</code>
     */
    public static final int WOOD_VALUE = 5;
    /**
     * <pre>
     * TODO: shares a slot with GOLD in some instances
     * </pre>
     *
     * <code>UNKNOWN = 6;</code>
     */
    public static final int UNKNOWN_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceType valueOf(int value) {
      return forNumber(value);
    }

    public static ResourceType forNumber(int value) {
      switch (value) {
        case 0: return _NOT_YET_USED;
        case 1: return CLAY;
        case 2: return ORE;
        case 3: return SHEEP;
        case 4: return WHEAT;
        case 5: return WOOD;
        case 6: return UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceType>() {
            public ResourceType findValueByNumber(int number) {
              return ResourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return soc.proto.Data.getDescriptor().getEnumTypes().get(0);
    }

    private static final ResourceType[] VALUES = values();

    public static ResourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ResourceType)
  }

  /**
   * <pre>
   * Piece Types for {&#64;link soc.game.SOCPlayingPiece}; same constant values as that class.
   * Used in {&#64;link GameMessage.PutPiece}, {&#64;link GameMessage.CancelBuild}, etc.
   * For the resources needed to build a piece type, see {&#64;link soc.game.SOCPlayingPiece#getResourcesToBuild(int)}.
   * &#64;see OtherPlayableItem
   * </pre>
   *
   * Protobuf enum {@code PieceType}
   */
  public enum PieceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * {&#64;link soc.game.SOCRoad} 
     * </pre>
     *
     * <code>ROAD = 0;</code>
     */
    ROAD(0),
    /**
     * <pre>
     * {&#64;link soc.game.SOCSettlement} 
     * </pre>
     *
     * <code>SETTLEMENT = 1;</code>
     */
    SETTLEMENT(1),
    /**
     * <pre>
     * {&#64;link soc.game.SOCCity} 
     * </pre>
     *
     * <code>CITY = 2;</code>
     */
    CITY(2),
    /**
     * <pre>
     * {&#64;link soc.game.SOCShip}; used only when {&#64;link soc.game.SOCGame#hasSeaBoard}.
     * &#64;since 2.0.00
     * </pre>
     *
     * <code>SHIP = 3;</code>
     */
    SHIP(3),
    /**
     * <pre>
     * {&#64;link soc.game.SOCFortress}; used only when {&#64;link soc.game.SOCGame#hasSeaBoard}
     * and scenario option {&#64;link soc.game.SOCGameOption#K_SC_PIRI _SC_PIRI} active.
     * New fortresses cannot be built after the game starts.
     * &#64;since 2.0.00
     * </pre>
     *
     * <code>FORTRESS = 4;</code>
     */
    FORTRESS(4),
    /**
     * <pre>
     * {&#64;link soc.game.SOCVillage}; used only when {&#64;link soc.game.SOCGame#hasSeaBoard}.
     * Villages belong to the game board, not to any player,
     * and new villages cannot be built after the game starts.
     * &#64;since 2.0.00
     * </pre>
     *
     * <code>VILLAGE = 5;</code>
     */
    VILLAGE(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * {&#64;link soc.game.SOCRoad} 
     * </pre>
     *
     * <code>ROAD = 0;</code>
     */
    public static final int ROAD_VALUE = 0;
    /**
     * <pre>
     * {&#64;link soc.game.SOCSettlement} 
     * </pre>
     *
     * <code>SETTLEMENT = 1;</code>
     */
    public static final int SETTLEMENT_VALUE = 1;
    /**
     * <pre>
     * {&#64;link soc.game.SOCCity} 
     * </pre>
     *
     * <code>CITY = 2;</code>
     */
    public static final int CITY_VALUE = 2;
    /**
     * <pre>
     * {&#64;link soc.game.SOCShip}; used only when {&#64;link soc.game.SOCGame#hasSeaBoard}.
     * &#64;since 2.0.00
     * </pre>
     *
     * <code>SHIP = 3;</code>
     */
    public static final int SHIP_VALUE = 3;
    /**
     * <pre>
     * {&#64;link soc.game.SOCFortress}; used only when {&#64;link soc.game.SOCGame#hasSeaBoard}
     * and scenario option {&#64;link soc.game.SOCGameOption#K_SC_PIRI _SC_PIRI} active.
     * New fortresses cannot be built after the game starts.
     * &#64;since 2.0.00
     * </pre>
     *
     * <code>FORTRESS = 4;</code>
     */
    public static final int FORTRESS_VALUE = 4;
    /**
     * <pre>
     * {&#64;link soc.game.SOCVillage}; used only when {&#64;link soc.game.SOCGame#hasSeaBoard}.
     * Villages belong to the game board, not to any player,
     * and new villages cannot be built after the game starts.
     * &#64;since 2.0.00
     * </pre>
     *
     * <code>VILLAGE = 5;</code>
     */
    public static final int VILLAGE_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PieceType valueOf(int value) {
      return forNumber(value);
    }

    public static PieceType forNumber(int value) {
      switch (value) {
        case 0: return ROAD;
        case 1: return SETTLEMENT;
        case 2: return CITY;
        case 3: return SHIP;
        case 4: return FORTRESS;
        case 5: return VILLAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PieceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PieceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PieceType>() {
            public PieceType findValueByNumber(int number) {
              return PieceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return soc.proto.Data.getDescriptor().getEnumTypes().get(1);
    }

    private static final PieceType[] VALUES = values();

    public static PieceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PieceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PieceType)
  }

  /**
   * <pre>
   * Other playable/cancelable player item types, used in {&#64;link GameMessage.CancelBuild}.
   * TODO: Might also be useful later in robot move planning.
   *&lt;P&gt;
   * Before v3.0.00 these were negative numbers stored in the same fields as {&#64;code PieceType}.
   * &#64;see PieceType
   * </pre>
   *
   * Protobuf enum {@code OtherPlayableItem}
   */
  public enum OtherPlayableItem
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Required for enum, but not sent: not a valid item type
     * </pre>
     *
     * <code>_UNSENT_DEFAULT_ITEM = 0;</code>
     */
    _UNSENT_DEFAULT_ITEM(0),
    /**
     * <pre>
     * Before v3.0.00, SOCBuildRequest used -1 here to request 6-player Special Building Phase
     * </pre>
     *
     * <code>DEV_CARD = 2;</code>
     */
    DEV_CARD(2),
    /**
     * <pre>
     * used from client to request canceling placement of a special SOCInventoryItem if possible
     * </pre>
     *
     * <code>INV_ITEM = 3;</code>
     */
    INV_ITEM(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Required for enum, but not sent: not a valid item type
     * </pre>
     *
     * <code>_UNSENT_DEFAULT_ITEM = 0;</code>
     */
    public static final int _UNSENT_DEFAULT_ITEM_VALUE = 0;
    /**
     * <pre>
     * Before v3.0.00, SOCBuildRequest used -1 here to request 6-player Special Building Phase
     * </pre>
     *
     * <code>DEV_CARD = 2;</code>
     */
    public static final int DEV_CARD_VALUE = 2;
    /**
     * <pre>
     * used from client to request canceling placement of a special SOCInventoryItem if possible
     * </pre>
     *
     * <code>INV_ITEM = 3;</code>
     */
    public static final int INV_ITEM_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OtherPlayableItem valueOf(int value) {
      return forNumber(value);
    }

    public static OtherPlayableItem forNumber(int value) {
      switch (value) {
        case 0: return _UNSENT_DEFAULT_ITEM;
        case 2: return DEV_CARD;
        case 3: return INV_ITEM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OtherPlayableItem>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OtherPlayableItem> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OtherPlayableItem>() {
            public OtherPlayableItem findValueByNumber(int number) {
              return OtherPlayableItem.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return soc.proto.Data.getDescriptor().getEnumTypes().get(2);
    }

    private static final OtherPlayableItem[] VALUES = values();

    public static OtherPlayableItem valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OtherPlayableItem(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:OtherPlayableItem)
  }

  /**
   * <pre>
   * Game state constants for {&#64;link soc.game.SOCGame}.
   * For general docs about game states see {&#64;link soc.game.SOCGame#NEW}.
   *&lt;P&gt;
   * Per-state docs may eventually be transferred here from SOCGame.
   * </pre>
   *
   * Protobuf enum {@code GameState}
   */
  public enum GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * New game
     * </pre>
     *
     * <code>NEW = 0;</code>
     */
    NEW(0),
    /**
     * <pre>
     * Ready to start playing
     * </pre>
     *
     * <code>READY = 1;</code>
     */
    READY(1),
    /**
     * <pre>
     * Game reset: Waiting for bots to leave old game
     * </pre>
     *
     * <code>READY_RESET_WAIT_ROBOT_DISMISS = 4;</code>
     */
    READY_RESET_WAIT_ROBOT_DISMISS(4),
    /**
     * <pre>
     * Players place 1st settlement
     * </pre>
     *
     * <code>START1A = 5;</code>
     */
    START1A(5),
    /**
     * <pre>
     * Players place 1st road
     * </pre>
     *
     * <code>START1B = 6;</code>
     */
    START1B(6),
    /**
     * <pre>
     * Players place 2nd settlement
     * </pre>
     *
     * <code>START2A = 10;</code>
     */
    START2A(10),
    /**
     * <pre>
     * Gold Hex resource pick during initial placement
     * </pre>
     *
     * <code>STARTS_WAITING_FOR_PICK_GOLD_RESOURCE = 14;</code>
     */
    STARTS_WAITING_FOR_PICK_GOLD_RESOURCE(14),
    /**
     * <pre>
     * Players place 2nd road
     * </pre>
     *
     * <code>START2B = 11;</code>
     */
    START2B(11),
    /**
     * <pre>
     * Players place 3rd settlement ({&#64;link SOCGameOption#K_SC_3IP _SC_3IP})
     * </pre>
     *
     * <code>START3A = 12;</code>
     */
    START3A(12),
    /**
     * <pre>
     * Players place 3rd road
     * </pre>
     *
     * <code>START3B = 13;</code>
     */
    START3B(13),
    /**
     * <pre>
     * Roll or play card
     * </pre>
     *
     * <code>ROLL_OR_CARD = 15;</code>
     */
    ROLL_OR_CARD(15),
    /**
     * <pre>
     * Done rolling
     * </pre>
     *
     * <code>PLAY1 = 20;</code>
     */
    PLAY1(20),
    /**
     * <code>PLACING_ROAD = 30;</code>
     */
    PLACING_ROAD(30),
    /**
     * <code>PLACING_SETTLEMENT = 31;</code>
     */
    PLACING_SETTLEMENT(31),
    /**
     * <code>PLACING_CITY = 32;</code>
     */
    PLACING_CITY(32),
    /**
     * <code>PLACING_ROBBER = 33;</code>
     */
    PLACING_ROBBER(33),
    /**
     * <code>PLACING_PIRATE = 34;</code>
     */
    PLACING_PIRATE(34),
    /**
     * <code>PLACING_SHIP = 35;</code>
     */
    PLACING_SHIP(35),
    /**
     * <code>PLACING_FREE_ROAD1 = 40;</code>
     */
    PLACING_FREE_ROAD1(40),
    /**
     * <code>PLACING_FREE_ROAD2 = 41;</code>
     */
    PLACING_FREE_ROAD2(41),
    /**
     * <code>PLACING_INV_ITEM = 42;</code>
     */
    PLACING_INV_ITEM(42),
    /**
     * <code>WAITING_FOR_DISCARDS = 50;</code>
     */
    WAITING_FOR_DISCARDS(50),
    /**
     * <code>WAITING_FOR_ROB_CHOOSE_PLAYER = 51;</code>
     */
    WAITING_FOR_ROB_CHOOSE_PLAYER(51),
    /**
     * <code>WAITING_FOR_DISCOVERY = 52;</code>
     */
    WAITING_FOR_DISCOVERY(52),
    /**
     * <code>WAITING_FOR_MONOPOLY = 53;</code>
     */
    WAITING_FOR_MONOPOLY(53),
    /**
     * <code>WAITING_FOR_ROBBER_OR_PIRATE = 54;</code>
     */
    WAITING_FOR_ROBBER_OR_PIRATE(54),
    /**
     * <code>WAITING_FOR_ROB_CLOTH_OR_RESOURCE = 55;</code>
     */
    WAITING_FOR_ROB_CLOTH_OR_RESOURCE(55),
    /**
     * <code>WAITING_FOR_PICK_GOLD_RESOURCE = 56;</code>
     */
    WAITING_FOR_PICK_GOLD_RESOURCE(56),
    /**
     * <code>SPECIAL_BUILDING = 100;</code>
     */
    SPECIAL_BUILDING(100),
    /**
     * <pre>
     * The game is over
     * </pre>
     *
     * <code>OVER = 1000;</code>
     */
    OVER(1000),
    /**
     * <pre>
     * Old game object, a new game with same name exists
     * </pre>
     *
     * <code>RESET_OLD = 1001;</code>
     */
    RESET_OLD(1001),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * New game
     * </pre>
     *
     * <code>NEW = 0;</code>
     */
    public static final int NEW_VALUE = 0;
    /**
     * <pre>
     * Ready to start playing
     * </pre>
     *
     * <code>READY = 1;</code>
     */
    public static final int READY_VALUE = 1;
    /**
     * <pre>
     * Game reset: Waiting for bots to leave old game
     * </pre>
     *
     * <code>READY_RESET_WAIT_ROBOT_DISMISS = 4;</code>
     */
    public static final int READY_RESET_WAIT_ROBOT_DISMISS_VALUE = 4;
    /**
     * <pre>
     * Players place 1st settlement
     * </pre>
     *
     * <code>START1A = 5;</code>
     */
    public static final int START1A_VALUE = 5;
    /**
     * <pre>
     * Players place 1st road
     * </pre>
     *
     * <code>START1B = 6;</code>
     */
    public static final int START1B_VALUE = 6;
    /**
     * <pre>
     * Players place 2nd settlement
     * </pre>
     *
     * <code>START2A = 10;</code>
     */
    public static final int START2A_VALUE = 10;
    /**
     * <pre>
     * Gold Hex resource pick during initial placement
     * </pre>
     *
     * <code>STARTS_WAITING_FOR_PICK_GOLD_RESOURCE = 14;</code>
     */
    public static final int STARTS_WAITING_FOR_PICK_GOLD_RESOURCE_VALUE = 14;
    /**
     * <pre>
     * Players place 2nd road
     * </pre>
     *
     * <code>START2B = 11;</code>
     */
    public static final int START2B_VALUE = 11;
    /**
     * <pre>
     * Players place 3rd settlement ({&#64;link SOCGameOption#K_SC_3IP _SC_3IP})
     * </pre>
     *
     * <code>START3A = 12;</code>
     */
    public static final int START3A_VALUE = 12;
    /**
     * <pre>
     * Players place 3rd road
     * </pre>
     *
     * <code>START3B = 13;</code>
     */
    public static final int START3B_VALUE = 13;
    /**
     * <pre>
     * Roll or play card
     * </pre>
     *
     * <code>ROLL_OR_CARD = 15;</code>
     */
    public static final int ROLL_OR_CARD_VALUE = 15;
    /**
     * <pre>
     * Done rolling
     * </pre>
     *
     * <code>PLAY1 = 20;</code>
     */
    public static final int PLAY1_VALUE = 20;
    /**
     * <code>PLACING_ROAD = 30;</code>
     */
    public static final int PLACING_ROAD_VALUE = 30;
    /**
     * <code>PLACING_SETTLEMENT = 31;</code>
     */
    public static final int PLACING_SETTLEMENT_VALUE = 31;
    /**
     * <code>PLACING_CITY = 32;</code>
     */
    public static final int PLACING_CITY_VALUE = 32;
    /**
     * <code>PLACING_ROBBER = 33;</code>
     */
    public static final int PLACING_ROBBER_VALUE = 33;
    /**
     * <code>PLACING_PIRATE = 34;</code>
     */
    public static final int PLACING_PIRATE_VALUE = 34;
    /**
     * <code>PLACING_SHIP = 35;</code>
     */
    public static final int PLACING_SHIP_VALUE = 35;
    /**
     * <code>PLACING_FREE_ROAD1 = 40;</code>
     */
    public static final int PLACING_FREE_ROAD1_VALUE = 40;
    /**
     * <code>PLACING_FREE_ROAD2 = 41;</code>
     */
    public static final int PLACING_FREE_ROAD2_VALUE = 41;
    /**
     * <code>PLACING_INV_ITEM = 42;</code>
     */
    public static final int PLACING_INV_ITEM_VALUE = 42;
    /**
     * <code>WAITING_FOR_DISCARDS = 50;</code>
     */
    public static final int WAITING_FOR_DISCARDS_VALUE = 50;
    /**
     * <code>WAITING_FOR_ROB_CHOOSE_PLAYER = 51;</code>
     */
    public static final int WAITING_FOR_ROB_CHOOSE_PLAYER_VALUE = 51;
    /**
     * <code>WAITING_FOR_DISCOVERY = 52;</code>
     */
    public static final int WAITING_FOR_DISCOVERY_VALUE = 52;
    /**
     * <code>WAITING_FOR_MONOPOLY = 53;</code>
     */
    public static final int WAITING_FOR_MONOPOLY_VALUE = 53;
    /**
     * <code>WAITING_FOR_ROBBER_OR_PIRATE = 54;</code>
     */
    public static final int WAITING_FOR_ROBBER_OR_PIRATE_VALUE = 54;
    /**
     * <code>WAITING_FOR_ROB_CLOTH_OR_RESOURCE = 55;</code>
     */
    public static final int WAITING_FOR_ROB_CLOTH_OR_RESOURCE_VALUE = 55;
    /**
     * <code>WAITING_FOR_PICK_GOLD_RESOURCE = 56;</code>
     */
    public static final int WAITING_FOR_PICK_GOLD_RESOURCE_VALUE = 56;
    /**
     * <code>SPECIAL_BUILDING = 100;</code>
     */
    public static final int SPECIAL_BUILDING_VALUE = 100;
    /**
     * <pre>
     * The game is over
     * </pre>
     *
     * <code>OVER = 1000;</code>
     */
    public static final int OVER_VALUE = 1000;
    /**
     * <pre>
     * Old game object, a new game with same name exists
     * </pre>
     *
     * <code>RESET_OLD = 1001;</code>
     */
    public static final int RESET_OLD_VALUE = 1001;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GameState valueOf(int value) {
      return forNumber(value);
    }

    public static GameState forNumber(int value) {
      switch (value) {
        case 0: return NEW;
        case 1: return READY;
        case 4: return READY_RESET_WAIT_ROBOT_DISMISS;
        case 5: return START1A;
        case 6: return START1B;
        case 10: return START2A;
        case 14: return STARTS_WAITING_FOR_PICK_GOLD_RESOURCE;
        case 11: return START2B;
        case 12: return START3A;
        case 13: return START3B;
        case 15: return ROLL_OR_CARD;
        case 20: return PLAY1;
        case 30: return PLACING_ROAD;
        case 31: return PLACING_SETTLEMENT;
        case 32: return PLACING_CITY;
        case 33: return PLACING_ROBBER;
        case 34: return PLACING_PIRATE;
        case 35: return PLACING_SHIP;
        case 40: return PLACING_FREE_ROAD1;
        case 41: return PLACING_FREE_ROAD2;
        case 42: return PLACING_INV_ITEM;
        case 50: return WAITING_FOR_DISCARDS;
        case 51: return WAITING_FOR_ROB_CHOOSE_PLAYER;
        case 52: return WAITING_FOR_DISCOVERY;
        case 53: return WAITING_FOR_MONOPOLY;
        case 54: return WAITING_FOR_ROBBER_OR_PIRATE;
        case 55: return WAITING_FOR_ROB_CLOTH_OR_RESOURCE;
        case 56: return WAITING_FOR_PICK_GOLD_RESOURCE;
        case 100: return SPECIAL_BUILDING;
        case 1000: return OVER;
        case 1001: return RESET_OLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GameState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameState>() {
            public GameState findValueByNumber(int number) {
              return GameState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return soc.proto.Data.getDescriptor().getEnumTypes().get(3);
    }

    private static final GameState[] VALUES = values();

    public static GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GameState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:GameState)
  }

  /**
   * <pre>
   * Seat lock states for locking/unlocking.
   * Note different meanings while game is forming
   * (GameState NEW) versus already active.
   * </pre>
   *
   * Protobuf enum {@code SeatLockState}
   */
  public enum SeatLockState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Seat not locked.
     * If game is forming, if this seat is empty when the game starts, a bot can sit here.
     * If game is active, a newly-joining player can take over a bot in this seat.
     * Since this value is 0, it may not appear in the message ("missing" field).
     * </pre>
     *
     * <code>UNLOCKED = 0;</code>
     */
    UNLOCKED(0),
    /**
     * <pre>
     * Seat is locked.
     * If game is forming, a bot will not sit here when the game starts.
     * If game is active, a newly-joining player can't take over a bot in this seat.
     * </pre>
     *
     * <code>LOCKED = 1;</code>
     */
    LOCKED(1),
    /**
     * <pre>
     * If this active game is reset, a robot will not take this seat, it will be left vacant.
     * Useful for resetting a game to play again with fewer robots, if a robot is currently sitting here.
     * Not a valid seat lock state if game is still forming.
     *&lt;P&gt;
     * This feature was added in v2.0.00; before that version, the seat lock state was
     * boolean (UNLOCKED or LOCKED).  Game resets included all robots unless their seat
     * was LOCKED at the time of reset.
     * </pre>
     *
     * <code>CLEAR_ON_RESET = 2;</code>
     */
    CLEAR_ON_RESET(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Seat not locked.
     * If game is forming, if this seat is empty when the game starts, a bot can sit here.
     * If game is active, a newly-joining player can take over a bot in this seat.
     * Since this value is 0, it may not appear in the message ("missing" field).
     * </pre>
     *
     * <code>UNLOCKED = 0;</code>
     */
    public static final int UNLOCKED_VALUE = 0;
    /**
     * <pre>
     * Seat is locked.
     * If game is forming, a bot will not sit here when the game starts.
     * If game is active, a newly-joining player can't take over a bot in this seat.
     * </pre>
     *
     * <code>LOCKED = 1;</code>
     */
    public static final int LOCKED_VALUE = 1;
    /**
     * <pre>
     * If this active game is reset, a robot will not take this seat, it will be left vacant.
     * Useful for resetting a game to play again with fewer robots, if a robot is currently sitting here.
     * Not a valid seat lock state if game is still forming.
     *&lt;P&gt;
     * This feature was added in v2.0.00; before that version, the seat lock state was
     * boolean (UNLOCKED or LOCKED).  Game resets included all robots unless their seat
     * was LOCKED at the time of reset.
     * </pre>
     *
     * <code>CLEAR_ON_RESET = 2;</code>
     */
    public static final int CLEAR_ON_RESET_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SeatLockState valueOf(int value) {
      return forNumber(value);
    }

    public static SeatLockState forNumber(int value) {
      switch (value) {
        case 0: return UNLOCKED;
        case 1: return LOCKED;
        case 2: return CLEAR_ON_RESET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SeatLockState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SeatLockState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SeatLockState>() {
            public SeatLockState findValueByNumber(int number) {
              return SeatLockState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return soc.proto.Data.getDescriptor().getEnumTypes().get(4);
    }

    private static final SeatLockState[] VALUES = values();

    public static SeatLockState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SeatLockState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SeatLockState)
  }

  public interface _IntArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:_IntArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 arr = 1;</code>
     */
    java.util.List<java.lang.Integer> getArrList();
    /**
     * <code>repeated int32 arr = 1;</code>
     */
    int getArrCount();
    /**
     * <code>repeated int32 arr = 1;</code>
     */
    int getArr(int index);
  }
  /**
   * <pre>
   * Data type for array of int32, since oneof and map can't directly contain a repeated field.
   * Negative values allowed but not frequently used (or efficiently encoded).
   * </pre>
   *
   * Protobuf type {@code _IntArray}
   */
  public  static final class _IntArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:_IntArray)
      _IntArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use _IntArray.newBuilder() to construct.
    private _IntArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private _IntArray() {
      arr_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private _IntArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                arr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              arr_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                arr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                arr_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          arr_ = java.util.Collections.unmodifiableList(arr_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return soc.proto.Data.internal_static__IntArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return soc.proto.Data.internal_static__IntArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              soc.proto.Data._IntArray.class, soc.proto.Data._IntArray.Builder.class);
    }

    public static final int ARR_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> arr_;
    /**
     * <code>repeated int32 arr = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getArrList() {
      return arr_;
    }
    /**
     * <code>repeated int32 arr = 1;</code>
     */
    public int getArrCount() {
      return arr_.size();
    }
    /**
     * <code>repeated int32 arr = 1;</code>
     */
    public int getArr(int index) {
      return arr_.get(index);
    }
    private int arrMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getArrList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(arrMemoizedSerializedSize);
      }
      for (int i = 0; i < arr_.size(); i++) {
        output.writeInt32NoTag(arr_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < arr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(arr_.get(i));
        }
        size += dataSize;
        if (!getArrList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        arrMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof soc.proto.Data._IntArray)) {
        return super.equals(obj);
      }
      soc.proto.Data._IntArray other = (soc.proto.Data._IntArray) obj;

      boolean result = true;
      result = result && getArrList()
          .equals(other.getArrList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getArrCount() > 0) {
        hash = (37 * hash) + ARR_FIELD_NUMBER;
        hash = (53 * hash) + getArrList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static soc.proto.Data._IntArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static soc.proto.Data._IntArray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static soc.proto.Data._IntArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static soc.proto.Data._IntArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static soc.proto.Data._IntArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static soc.proto.Data._IntArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static soc.proto.Data._IntArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static soc.proto.Data._IntArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static soc.proto.Data._IntArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static soc.proto.Data._IntArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static soc.proto.Data._IntArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static soc.proto.Data._IntArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.Data._IntArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Data type for array of int32, since oneof and map can't directly contain a repeated field.
     * Negative values allowed but not frequently used (or efficiently encoded).
     * </pre>
     *
     * Protobuf type {@code _IntArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:_IntArray)
        soc.proto.Data._IntArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return soc.proto.Data.internal_static__IntArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return soc.proto.Data.internal_static__IntArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                soc.proto.Data._IntArray.class, soc.proto.Data._IntArray.Builder.class);
      }

      // Construct using soc.proto.Data._IntArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        arr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return soc.proto.Data.internal_static__IntArray_descriptor;
      }

      public soc.proto.Data._IntArray getDefaultInstanceForType() {
        return soc.proto.Data._IntArray.getDefaultInstance();
      }

      public soc.proto.Data._IntArray build() {
        soc.proto.Data._IntArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public soc.proto.Data._IntArray buildPartial() {
        soc.proto.Data._IntArray result = new soc.proto.Data._IntArray(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          arr_ = java.util.Collections.unmodifiableList(arr_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.arr_ = arr_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof soc.proto.Data._IntArray) {
          return mergeFrom((soc.proto.Data._IntArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(soc.proto.Data._IntArray other) {
        if (other == soc.proto.Data._IntArray.getDefaultInstance()) return this;
        if (!other.arr_.isEmpty()) {
          if (arr_.isEmpty()) {
            arr_ = other.arr_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureArrIsMutable();
            arr_.addAll(other.arr_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        soc.proto.Data._IntArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (soc.proto.Data._IntArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> arr_ = java.util.Collections.emptyList();
      private void ensureArrIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          arr_ = new java.util.ArrayList<java.lang.Integer>(arr_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 arr = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getArrList() {
        return java.util.Collections.unmodifiableList(arr_);
      }
      /**
       * <code>repeated int32 arr = 1;</code>
       */
      public int getArrCount() {
        return arr_.size();
      }
      /**
       * <code>repeated int32 arr = 1;</code>
       */
      public int getArr(int index) {
        return arr_.get(index);
      }
      /**
       * <code>repeated int32 arr = 1;</code>
       */
      public Builder setArr(
          int index, int value) {
        ensureArrIsMutable();
        arr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 arr = 1;</code>
       */
      public Builder addArr(int value) {
        ensureArrIsMutable();
        arr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 arr = 1;</code>
       */
      public Builder addAllArr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureArrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, arr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 arr = 1;</code>
       */
      public Builder clearArr() {
        arr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:_IntArray)
    }

    // @@protoc_insertion_point(class_scope:_IntArray)
    private static final soc.proto.Data._IntArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new soc.proto.Data._IntArray();
    }

    public static soc.proto.Data._IntArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<_IntArray>
        PARSER = new com.google.protobuf.AbstractParser<_IntArray>() {
      public _IntArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new _IntArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<_IntArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<_IntArray> getParserForType() {
      return PARSER;
    }

    public soc.proto.Data._IntArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface _SIntArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:_SIntArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated sint32 arr = 1;</code>
     */
    java.util.List<java.lang.Integer> getArrList();
    /**
     * <code>repeated sint32 arr = 1;</code>
     */
    int getArrCount();
    /**
     * <code>repeated sint32 arr = 1;</code>
     */
    int getArr(int index);
  }
  /**
   * <pre>
   * Data type for array of sint32, since oneof and map can't directly contain a repeated field.
   * </pre>
   *
   * Protobuf type {@code _SIntArray}
   */
  public  static final class _SIntArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:_SIntArray)
      _SIntArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use _SIntArray.newBuilder() to construct.
    private _SIntArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private _SIntArray() {
      arr_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private _SIntArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                arr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              arr_.add(input.readSInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                arr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                arr_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          arr_ = java.util.Collections.unmodifiableList(arr_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return soc.proto.Data.internal_static__SIntArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return soc.proto.Data.internal_static__SIntArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              soc.proto.Data._SIntArray.class, soc.proto.Data._SIntArray.Builder.class);
    }

    public static final int ARR_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> arr_;
    /**
     * <code>repeated sint32 arr = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getArrList() {
      return arr_;
    }
    /**
     * <code>repeated sint32 arr = 1;</code>
     */
    public int getArrCount() {
      return arr_.size();
    }
    /**
     * <code>repeated sint32 arr = 1;</code>
     */
    public int getArr(int index) {
      return arr_.get(index);
    }
    private int arrMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getArrList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(arrMemoizedSerializedSize);
      }
      for (int i = 0; i < arr_.size(); i++) {
        output.writeSInt32NoTag(arr_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < arr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(arr_.get(i));
        }
        size += dataSize;
        if (!getArrList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        arrMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof soc.proto.Data._SIntArray)) {
        return super.equals(obj);
      }
      soc.proto.Data._SIntArray other = (soc.proto.Data._SIntArray) obj;

      boolean result = true;
      result = result && getArrList()
          .equals(other.getArrList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getArrCount() > 0) {
        hash = (37 * hash) + ARR_FIELD_NUMBER;
        hash = (53 * hash) + getArrList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static soc.proto.Data._SIntArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static soc.proto.Data._SIntArray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static soc.proto.Data._SIntArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static soc.proto.Data._SIntArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static soc.proto.Data._SIntArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static soc.proto.Data._SIntArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static soc.proto.Data._SIntArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static soc.proto.Data._SIntArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static soc.proto.Data._SIntArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static soc.proto.Data._SIntArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static soc.proto.Data._SIntArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static soc.proto.Data._SIntArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(soc.proto.Data._SIntArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Data type for array of sint32, since oneof and map can't directly contain a repeated field.
     * </pre>
     *
     * Protobuf type {@code _SIntArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:_SIntArray)
        soc.proto.Data._SIntArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return soc.proto.Data.internal_static__SIntArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return soc.proto.Data.internal_static__SIntArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                soc.proto.Data._SIntArray.class, soc.proto.Data._SIntArray.Builder.class);
      }

      // Construct using soc.proto.Data._SIntArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        arr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return soc.proto.Data.internal_static__SIntArray_descriptor;
      }

      public soc.proto.Data._SIntArray getDefaultInstanceForType() {
        return soc.proto.Data._SIntArray.getDefaultInstance();
      }

      public soc.proto.Data._SIntArray build() {
        soc.proto.Data._SIntArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public soc.proto.Data._SIntArray buildPartial() {
        soc.proto.Data._SIntArray result = new soc.proto.Data._SIntArray(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          arr_ = java.util.Collections.unmodifiableList(arr_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.arr_ = arr_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof soc.proto.Data._SIntArray) {
          return mergeFrom((soc.proto.Data._SIntArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(soc.proto.Data._SIntArray other) {
        if (other == soc.proto.Data._SIntArray.getDefaultInstance()) return this;
        if (!other.arr_.isEmpty()) {
          if (arr_.isEmpty()) {
            arr_ = other.arr_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureArrIsMutable();
            arr_.addAll(other.arr_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        soc.proto.Data._SIntArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (soc.proto.Data._SIntArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> arr_ = java.util.Collections.emptyList();
      private void ensureArrIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          arr_ = new java.util.ArrayList<java.lang.Integer>(arr_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint32 arr = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getArrList() {
        return java.util.Collections.unmodifiableList(arr_);
      }
      /**
       * <code>repeated sint32 arr = 1;</code>
       */
      public int getArrCount() {
        return arr_.size();
      }
      /**
       * <code>repeated sint32 arr = 1;</code>
       */
      public int getArr(int index) {
        return arr_.get(index);
      }
      /**
       * <code>repeated sint32 arr = 1;</code>
       */
      public Builder setArr(
          int index, int value) {
        ensureArrIsMutable();
        arr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 arr = 1;</code>
       */
      public Builder addArr(int value) {
        ensureArrIsMutable();
        arr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 arr = 1;</code>
       */
      public Builder addAllArr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureArrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, arr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 arr = 1;</code>
       */
      public Builder clearArr() {
        arr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:_SIntArray)
    }

    // @@protoc_insertion_point(class_scope:_SIntArray)
    private static final soc.proto.Data._SIntArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new soc.proto.Data._SIntArray();
    }

    public static soc.proto.Data._SIntArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<_SIntArray>
        PARSER = new com.google.protobuf.AbstractParser<_SIntArray>() {
      public _SIntArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new _SIntArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<_SIntArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<_SIntArray> getParserForType() {
      return PARSER;
    }

    public soc.proto.Data._SIntArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static__IntArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static__IntArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static__SIntArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static__SIntArray_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ndata.proto\"\030\n\t_IntArray\022\013\n\003arr\030\001 \003(\005\"\031" +
      "\n\n_SIntArray\022\013\n\003arr\030\001 \003(\021*a\n\014ResourceTyp" +
      "e\022\021\n\r_NOT_YET_USED\020\000\022\010\n\004CLAY\020\001\022\007\n\003ORE\020\002\022" +
      "\t\n\005SHEEP\020\003\022\t\n\005WHEAT\020\004\022\010\n\004WOOD\020\005\022\013\n\007UNKNO" +
      "WN\020\006*T\n\tPieceType\022\010\n\004ROAD\020\000\022\016\n\nSETTLEMEN" +
      "T\020\001\022\010\n\004CITY\020\002\022\010\n\004SHIP\020\003\022\014\n\010FORTRESS\020\004\022\013\n" +
      "\007VILLAGE\020\005*I\n\021OtherPlayableItem\022\030\n\024_UNSE" +
      "NT_DEFAULT_ITEM\020\000\022\014\n\010DEV_CARD\020\002\022\014\n\010INV_I" +
      "TEM\020\003*\245\005\n\tGameState\022\007\n\003NEW\020\000\022\t\n\005READY\020\001\022" +
      "\"\n\036READY_RESET_WAIT_ROBOT_DISMISS\020\004\022\013\n\007S",
      "TART1A\020\005\022\013\n\007START1B\020\006\022\013\n\007START2A\020\n\022)\n%ST" +
      "ARTS_WAITING_FOR_PICK_GOLD_RESOURCE\020\016\022\013\n" +
      "\007START2B\020\013\022\013\n\007START3A\020\014\022\013\n\007START3B\020\r\022\020\n\014" +
      "ROLL_OR_CARD\020\017\022\t\n\005PLAY1\020\024\022\020\n\014PLACING_ROA" +
      "D\020\036\022\026\n\022PLACING_SETTLEMENT\020\037\022\020\n\014PLACING_C" +
      "ITY\020 \022\022\n\016PLACING_ROBBER\020!\022\022\n\016PLACING_PIR" +
      "ATE\020\"\022\020\n\014PLACING_SHIP\020#\022\026\n\022PLACING_FREE_" +
      "ROAD1\020(\022\026\n\022PLACING_FREE_ROAD2\020)\022\024\n\020PLACI" +
      "NG_INV_ITEM\020*\022\030\n\024WAITING_FOR_DISCARDS\0202\022" +
      "!\n\035WAITING_FOR_ROB_CHOOSE_PLAYER\0203\022\031\n\025WA",
      "ITING_FOR_DISCOVERY\0204\022\030\n\024WAITING_FOR_MON" +
      "OPOLY\0205\022 \n\034WAITING_FOR_ROBBER_OR_PIRATE\020" +
      "6\022%\n!WAITING_FOR_ROB_CLOTH_OR_RESOURCE\0207" +
      "\022\"\n\036WAITING_FOR_PICK_GOLD_RESOURCE\0208\022\024\n\020" +
      "SPECIAL_BUILDING\020d\022\t\n\004OVER\020\350\007\022\016\n\tRESET_O" +
      "LD\020\351\007*=\n\rSeatLockState\022\014\n\010UNLOCKED\020\000\022\n\n\006" +
      "LOCKED\020\001\022\022\n\016CLEAR_ON_RESET\020\002B\r\n\tsoc.prot" +
      "oH\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static__IntArray_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static__IntArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static__IntArray_descriptor,
        new java.lang.String[] { "Arr", });
    internal_static__SIntArray_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static__SIntArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static__SIntArray_descriptor,
        new java.lang.String[] { "Arr", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
